from rest_framework import serializers
from captcha.fields import CaptchaField
from .models import Comment

class CommentSerializer(serializers.ModelSerializer):
    captcha_key = serializers.CharField(write_only=True, required=True)  # Для хранения ключа CAPTCHA
    captcha_value = serializers.CharField(write_only=True, required=True)  # Для ввода пользователем значения

    class Meta:
        model = Comment
        fields = ['id', 'username', 'email', 'text', 'created_at', 'captcha_key', 'captcha_value']

    def validate(self, data):
        """
        Проверка CAPTCHA.
        """
        from captcha.models import CaptchaStore

        captcha_key = data.get('captcha_key')
        captcha_value = data.get('captcha_value')

        # Проверяем соответствие введенной CAPTCHA с сохраненной
        if not captcha_key or not captcha_value:
            raise serializers.ValidationError("CAPTCHA обязательна.")

        try:
            captcha = CaptchaStore.objects.get(hashkey=captcha_key)
        except CaptchaStore.DoesNotExist:
            raise serializers.ValidationError("CAPTCHA устарела или не найдена.")

        if captcha.response != captcha_value.lower():
            raise serializers.ValidationError("CAPTCHA введена неверно.")

        captcha.delete()  # Удаляем CAPTCHA после успешной проверки
        return data

